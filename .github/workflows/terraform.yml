name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless of the GitHub Actions runner's OS
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      # Configure AWS CLI (required for S3 backend)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-2'

      # Configure Terraform backend with S3
      - name: Configure Terraform Backend
        run: |
          terraform -chdir=infrastructure/terraform init -backend-config="s3.tfvars"

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        run: terraform -chdir=infrastructure/terraform init -input=false

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform -chdir=infrastructure/terraformfmt -check

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform -chdir=infrastructure/terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform -chdir=infrastructure/terraform apply -auto-approve -input=false
